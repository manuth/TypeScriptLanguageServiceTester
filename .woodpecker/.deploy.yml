pipeline:
  install:
    image: node
    commands:
      - npm install
    when:
      event: tag
      tag: v[0-9]*.[0-9]*.[0-9]*
  prepare release:
    image: node
    commands:
      - npm install @stdlib/utils-escape-regexp-string --no-save
      - node -e "console.log(require('@stdlib/utils-escape-regexp-string')('${CI_COMMIT_TAG}'))" > .tagName.txt
    when:
      event: tag
      tag: v[0-9]*.[0-9]*.[0-9]*
  prepare release notes:
    image: node
    commands:
      - export TagName=$$(cat .tagName.txt)
      - export TagHeading="/## \(.* \($${TagName}\|\[$${TagName}\]\)\)\$/"
      - export HeadingPattern='/## \(.* \(v[0-9.]*\|\[.*\]\)\)/'
      - '[ ! -z "$$(sed "$${TagHeading}p;d" CHANGELOG.md)" ] || { echo "No Changelog Entries Found!" && false; }'
      - cp -f CHANGELOG.md .releaseNotes.md
      - sed -i "1,$${TagHeading}{ $${TagHeading}P ; d } ; $${HeadingPattern},\$d" .releaseNotes.md
      - cp -f .releaseNotes.md .releaseTitle.md
      - sed -i "2,\$d ; s$${HeadingPattern}\\\\1/" .releaseTitle.md
    when:
      event: tag
      tag: v[0-9]*.[0-9]*.[0-9]*
  publish package to npm:
    image: node
    secrets:
      - npm_token
    commands:
      - echo "//registry.npmjs.org/:_authToken=$${NPM_TOKEN}" > ~/.npmrc
      - npm publish
    when:
      event: tag
      tag: v[0-9]*.[0-9]*.[0-9]*
  publish package to github:
    image: node
    secrets:
      - github_packages_token
    commands:
      - echo "//npm.pkg.github.com/:_authToken=$${GITHUB_PACKAGES_TOKEN}" > ~/.npmrc
      - echo "registry=https://npm.pkg.github.com" >> ~/.npmrc
      - npm publish
    when:
      event: tag
      tag: v[0-9]*.[0-9]*.[0-9]*
  publish release:
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_publish_token
      files:
        - "*.tgz"
      title: .releaseTitle.md
      note: .releaseNotes.md
    when:
      event: tag
      tag: v[0-9]*.[0-9]*.[0-9]*

depends_on:
  - check
